<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>design mode on haiyux's blog</title><link>https://www.zhaohaiyu.com/categories/design-mode/</link><description>Recent content in design mode on haiyux's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 12 May 2022 10:03:53 +0800</lastBuildDate><atom:link href="https://www.zhaohaiyu.com/categories/design-mode/index.xml" rel="self" type="application/rss+xml"/><item><title>行为模式</title><link>https://www.zhaohaiyu.com/post/designmode/behavioral/</link><pubDate>Thu, 12 May 2022 10:03:53 +0800</pubDate><guid>https://www.zhaohaiyu.com/post/designmode/behavioral/</guid><description>责任链模式 责任链模式是一种行为设计模式， 允许你将请求沿着处理者链进行发送。 收到请求后， 每个处理者均可对请求进行处理， 或将其传递给链上的下个处</description></item><item><title>结构型模式</title><link>https://www.zhaohaiyu.com/post/designmode/structure/</link><pubDate>Wed, 27 Apr 2022 15:04:58 +0800</pubDate><guid>https://www.zhaohaiyu.com/post/designmode/structure/</guid><description>适配器模式 适配器模式用于转换一种接口适配另一种接口。比如，现在有个借口是对json字符串进行分析等，现在有一些yaml文件也要分析，这时候我</description></item><item><title>创建者模式</title><link>https://www.zhaohaiyu.com/post/designmode/creator/</link><pubDate>Sat, 23 Apr 2022 16:28:58 +0800</pubDate><guid>https://www.zhaohaiyu.com/post/designmode/creator/</guid><description>单例模式 为什么要用单例模式 保证一个对象只有一个实例 ，减少内存开销。比如一些可以复用一个连接的网络，比如http2 client等，而且可以减少</description></item></channel></rss>