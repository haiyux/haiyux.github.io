<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>database on haiyux's blog</title><link>https://www.zhaohaiyu.com/categories/database/</link><description>Recent content in database on haiyux's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 02 Sep 2021 16:33:45 +0800</lastBuildDate><atom:link href="https://www.zhaohaiyu.com/categories/database/index.xml" rel="self" type="application/rss+xml"/><item><title>mysql redo log和binlog</title><link>https://www.zhaohaiyu.com/post/database/mysql-redolog-binlog/</link><pubDate>Thu, 02 Sep 2021 16:33:45 +0800</pubDate><guid>https://www.zhaohaiyu.com/post/database/mysql-redolog-binlog/</guid><description>更新语句执行流程 下面是这个表的创建语句，这个表有一个主键 ID 和一个整型字段 c： createtableT(IDintprimarykey,cin</description></item><item><title>SQL查询语句执行流程</title><link>https://www.zhaohaiyu.com/post/database/mysql-exec-order/</link><pubDate>Thu, 02 Sep 2021 11:33:45 +0800</pubDate><guid>https://www.zhaohaiyu.com/post/database/mysql-exec-order/</guid><description>msyql执行流程 你有个最简单的表，表里只有一个 ID 字段，在执行下面这个查询语句时：： select*fromTwhereID=10；我们看到的</description></item><item><title>mysql事务</title><link>https://www.zhaohaiyu.com/post/database/mysql-transaction/</link><pubDate>Fri, 20 Aug 2021 09:33:45 +0800</pubDate><guid>https://www.zhaohaiyu.com/post/database/mysql-transaction/</guid><description>事务是什么 事务就是指逻辑上的一组SQL语句操作，组成这组操作的各个SQL语句，执行时要么全成功要么全失败。 在 MySQL 中，事务支持是在引擎层实现的。</description></item><item><title>mysql锁</title><link>https://www.zhaohaiyu.com/post/database/mysql-lock/</link><pubDate>Fri, 20 Aug 2021 06:33:45 +0800</pubDate><guid>https://www.zhaohaiyu.com/post/database/mysql-lock/</guid><description>MySQL中的锁 数据库锁设计的初衷是处理并发问题。作为多用户共享的资源，当出现并发访问的时候，数据库需要合理地控制资源的访问规则。而锁就是用</description></item><item><title>RabbitMQ消息队列</title><link>https://www.zhaohaiyu.com/post/database/rabbitmq/</link><pubDate>Thu, 01 Jul 2021 17:40:39 +0800</pubDate><guid>https://www.zhaohaiyu.com/post/database/rabbitmq/</guid><description>消息队列 本篇文章主要介绍了 RabbitMQ 这种消息队列，从消息队列的概念、应用场景、安装方式到它的核心概念、五种工作模式。在安装的时候推荐使用 Docker 方式进行安</description></item><item><title>reids基础</title><link>https://www.zhaohaiyu.com/post/database/redis/</link><pubDate>Sat, 10 Oct 2020 06:33:45 +0800</pubDate><guid>https://www.zhaohaiyu.com/post/database/redis/</guid><description>redis介绍 Redis 是完全开源的，遵守 BSD 协议，是一个高性能的 key-value 数据库。 Redis 与其他 key - value 缓存产品有以下三个特点： Redis支持数据的持久化，可以将内</description></item><item><title>mysql索引</title><link>https://www.zhaohaiyu.com/post/database/mysql-index/</link><pubDate>Wed, 07 Oct 2020 11:23:45 +0800</pubDate><guid>https://www.zhaohaiyu.com/post/database/mysql-index/</guid><description>什么是索引 一般的应用系统，都是读多写少。而且插入操作和一般的更新操作很少出现性能问题（因为有redo log锁cache缓存）。在生产环境中，</description></item><item><title>MySQL数据完整性约束</title><link>https://www.zhaohaiyu.com/post/database/mysql-constraint/</link><pubDate>Wed, 15 Jan 2020 10:33:45 +0800</pubDate><guid>https://www.zhaohaiyu.com/post/database/mysql-constraint/</guid><description>主键约束 主键可以是表中的某一列，也可以是表中的多个列所构成的一个组合；其中，由多个列组合而成的主键也称为复合主键。在MySQL中，主键列必须</description></item><item><title>MySQL基础数据类型</title><link>https://www.zhaohaiyu.com/post/database/mysql-data-type/</link><pubDate>Sun, 12 Jan 2020 10:33:45 +0800</pubDate><guid>https://www.zhaohaiyu.com/post/database/mysql-data-type/</guid><description>数值类型 MySQL支持所有标准SQL数值数据类型。 这些类型包括严格数值数据类型(INTEGER、SMALLINT、DECIMAL和NUMER</description></item></channel></rss>