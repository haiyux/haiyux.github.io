<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mysql on 赵海宇的博客</title>
    <link>https://www.zhaohaiyu.com/tags/mysql/</link>
    <description>Recent content in mysql on 赵海宇的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 02 Sep 2021 16:33:45 +0800</lastBuildDate><atom:link href="https://www.zhaohaiyu.com/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>mysql redo log和binlog</title>
      <link>https://www.zhaohaiyu.com/post/mysql-redolog-binlog/</link>
      <pubDate>Thu, 02 Sep 2021 16:33:45 +0800</pubDate>
      
      <guid>https://www.zhaohaiyu.com/post/mysql-redolog-binlog/</guid>
      <description>更新语句执行流程 下面是这个表的创建语句，这个表有一个主键 ID 和一个整型字段 c： create table T(ID int primary key, c int); 如果要将 ID=2 这一行的值加 1，SQL 语句就会这么写： update T set c=c+1 where ID=2; 前面我有跟你介绍过 SQL 语句基本的执行链路，这里我再</description>
    </item>
    
    <item>
      <title>SQL查询语句执行流程</title>
      <link>https://www.zhaohaiyu.com/post/mysql-exec-order/</link>
      <pubDate>Thu, 02 Sep 2021 11:33:45 +0800</pubDate>
      
      <guid>https://www.zhaohaiyu.com/post/mysql-exec-order/</guid>
      <description>msyql执行流程 你有个最简单的表，表里只有一个 ID 字段，在执行下面这个查询语句时：： select * from T where ID=10； 我们看到的只是输入一条语句，返回一个结果，却不知道这条语句在 MySQL 内部的执行过程。 下面我给出的是 MySQL</description>
    </item>
    
    <item>
      <title>mysql事务</title>
      <link>https://www.zhaohaiyu.com/post/mysql-transaction/</link>
      <pubDate>Fri, 20 Aug 2021 09:33:45 +0800</pubDate>
      
      <guid>https://www.zhaohaiyu.com/post/mysql-transaction/</guid>
      <description>事务是什么 事务就是指逻辑上的一组SQL语句操作，组成这组操作的各个SQL语句，执行时要么全成功要么全失败。 在 MySQL 中，事务支持是在引擎层实现的。MySQL 是一个支持多引擎的系统，但并不是所有的引擎都支持事</description>
    </item>
    
    <item>
      <title>mysql锁</title>
      <link>https://www.zhaohaiyu.com/post/mysql-lock/</link>
      <pubDate>Fri, 20 Aug 2021 06:33:45 +0800</pubDate>
      
      <guid>https://www.zhaohaiyu.com/post/mysql-lock/</guid>
      <description>MySQL中的锁 数据库锁设计的初衷是处理并发问题。作为多用户共享的资源，当出现并发访问的时候，数据库需要合理地控制资源的访问规则。而锁就是用来实现这些访问规则的重要数据结构。 根据加锁的范围，MySQL</description>
    </item>
    
    <item>
      <title>mysql索引</title>
      <link>https://www.zhaohaiyu.com/post/mysql-index/</link>
      <pubDate>Wed, 07 Oct 2020 11:23:45 +0800</pubDate>
      
      <guid>https://www.zhaohaiyu.com/post/mysql-index/</guid>
      <description>什么是索引 一般的应用系统，都是读多写少。而且插入操作和一般的更新操作很少出现性能问题（因为有redo log锁cache缓存）。在生产环境中，我们遇到最多的，也是最容易出问题的，还是一些复杂的查询操作，</description>
    </item>
    
    <item>
      <title>MySQL数据完整性约束</title>
      <link>https://www.zhaohaiyu.com/post/mysql-constraint/</link>
      <pubDate>Wed, 15 Jan 2020 10:33:45 +0800</pubDate>
      
      <guid>https://www.zhaohaiyu.com/post/mysql-constraint/</guid>
      <description>主键约束 主键可以是表中的某一列，也可以是表中的多个列所构成的一个组合；其中，由多个列组合而成的主键也称为复合主键。在MySQL中，主键列必须遵守以下规则。 （1）每一个表只能定义一个主键。 （2）唯一性原</description>
    </item>
    
    <item>
      <title>MySQL基础数据类型</title>
      <link>https://www.zhaohaiyu.com/post/mysql-data-type/</link>
      <pubDate>Sun, 12 Jan 2020 10:33:45 +0800</pubDate>
      
      <guid>https://www.zhaohaiyu.com/post/mysql-data-type/</guid>
      <description>数值类型 MySQL支持所有标准SQL数值数据类型。 这些类型包括严格数值数据类型(INTEGER、SMALLINT、DECIMAL和NUMERIC)，以及近似数值数据类型(FLOAT、REAL和DOUB</description>
    </item>
    
  </channel>
</rss>
